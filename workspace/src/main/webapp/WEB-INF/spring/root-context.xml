<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- mybatis설정 -->
	<!-- mybatis db연결 객체 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<!--sqlSessionFactoryBean: mybatis설정 파일 read -->
		<constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
	<!-- *.xml mybatis설정 파일 read mybatis-config.xml mapper: anno.xml -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath:mapper/**/*.xml"></property>
	</bean>

	<!-- 트랜잭션 어드바이스 설정 지금까지 Advice는 직접 구현 했었다. 하지만 트랜잭션 관리 기능의 어드바이스는 직접 구현하지 
		않는다. 스프링 컨테이너가 <tx:advice를 참조 해서 자동 생성한다. <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> &lt;!&ndash; do*로 시작하는 메서드는 트랜잭션관리 대상에서 제외 &ndash;&gt; <tx:method 
		name="do*" read-only="true" /> &lt;!&ndash; up*시작하는 메서드는 트랜잭션 관리 대상이다. &ndash;&gt; 
		<tx:method name="up*" read-only="false" rollback-for="Excetion" /> </tx:attributes> 
		</tx:advice> -->

	<!-- pointcut+advice = adviser * com.pcwk.ehr.업무.service.*Impl.up*(..) -->

	<!-- database.properties -->

	<context:property-placeholder
		location="classpath:/resource/config/database.properties" />
	<!-- Connection Pool -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 최대 접속 허용 갯수 -->
		<property name="maxActive" value="${jdbc.maxActive}" />

		<!-- 여분으로 남겨질 Connection -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />

		<!-- DB연결 대기시간 -->
		<property name="maxWait" value="${jdbc.maxWait}" />

		<!-- Connection 잘못 관리되어 버려진 연결 찾아 재활용 -->
		<property name="removeAbandoned"
			value="${jdbc.removeAbandoned}" />

		<!-- 버려진 연결로 인식할 기본 시간 -->
		<property name="removeAbandonedTimeout"
			value="${jdbc.removeAbandonedTimeout}" />

	</bean>
	
	  <!-- JavaMailSenderImpl -->
  <bean id="mailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="smtp.naver.com"/>
    <property name="port" value="465"/>
    <property name="username" value="je971002@naver.com"/>
    <property name="password" value="Jerry@4046"/>
    <property name="defaultEncoding" value="utf-8"/>
    <property name="javaMailProperties">
           <props>
               <prop key="mail.smtp.host">smtp.naver.com</prop>
               <prop key="mail.smtp.port">465</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
               <prop key="mail.smtp.ssl.enable">true</prop>
               <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
               <prop key="mail.debug">true</prop>
           </props>
    </property>
  </bean>

</beans>

